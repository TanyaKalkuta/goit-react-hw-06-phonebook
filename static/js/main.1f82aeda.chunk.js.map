{"version":3,"sources":["Component/ContactList/ContactList.module.css","Component/Filter/Filter.module.css","Component/ElementContactList/ElementContactList.module.css","Component/Container/Container.module.css","Component/Container/Container.js","redux/phonebook/phonebook-action.js","Component/ContactForm/ContactForm.js","Component/Filter/Filter.js","Component/ElementContactList/ElementContactList.js","Component/ContactList/ContactList.js","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js","Component/ContactForm/ContactForm.module.css"],"names":["module","exports","Container","children","className","styles","contactAction","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","ContactForm","state","nameInputId","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","contacts_form","htmlFor","label","type","pattern","title","required","onChange","input","form_button","Component","defaultProps","connect","dispatch","contactActions","contacts","filter","target","ElementContactList","contact_name","contact_number","getVisibleContacts","normalizedFilter","toLowerCase","contact","includes","items","onClick","contact_list","map","contact_item","item_button","App","React","createReducer","contactsAction","alert","_","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.1f82aeda.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"stat_list\":\"ContactList_stat_list__1K0yy\",\"item\":\"ContactList_item__30P0V\",\"contact_list\":\"ContactList_contact_list__2xTDy\",\"contact_item\":\"ContactList_contact_item__3zepR\",\"item_button\":\"ContactList_item_button__LTjwm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend_list\":\"Filter_friend_list__2xMPe\",\"item\":\"Filter_item__iEfFv\",\"avatar\":\"Filter_avatar__2RlVM\",\"name\":\"Filter_name__3W3Os\",\"status_isOnline\":\"Filter_status_isOnline__3LHwL\",\"status_isOffline\":\"Filter_status_isOffline__1RKnb\",\"label\":\"Filter_label__3k7j0\",\"input\":\"Filter_input__1QGVW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_name\":\"ElementContactList_contact_name__3214_\",\"contact_number\":\"ElementContactList_contact_number__2FmPk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__2F3cR\"};","import React from 'react';\r\nimport styles from './Container.module.css'\r\n\r\nconst Container = ({ children }) =>\r\n    <div className={styles.Container}>{children}</div>\r\n    \r\nexport default Container;","import { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction('contacts/add', (name, number) => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction('contacts/delete');\r\n\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\nconst contactAction = { addContact, deleteContact, changeFilter };\r\nexport default contactAction;\r\n\r\n//-----------------1й вариант, без Redux Toolkit\r\n// import types from './phonebook-types';\r\n// import { v4 as uuidv4 } from 'uuid';\r\n\r\n// const addContact = ({ name, number }) => ({\r\n//   type: types.ADD,\r\n//   payload: {\r\n//     id: uuidv4(),\r\n//     name: name,\r\n//     number: number,\r\n//   },\r\n// });\r\n\r\n// const deleteContact = contactId => ({\r\n//   type: types.DELETE,\r\n//   payload: contactId,\r\n// });\r\n\r\n// const changeFilter = value => ({\r\n//   type: types.CHANGE_FILTER,\r\n//   payload: value,\r\n// });\r\n\r\n// export default { addContact, deleteContact, changeFilter };\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport contactActions from '../../redux/phonebook/phonebook-action';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  static defaultProps = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  static propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n    // name: this.props.name,\r\n    // number: this.props.number\r\n  };\r\n\r\n  nameInputId = uuidv4();\r\n  numberInputId = uuidv4();\r\n\r\n  /** Отвечает за обновление состояния*/\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n  /** Вызывается при отправке формы */\r\n  // Проп который передается форме для вызова при сабмите\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    this.props.onSubmit(name, number);\r\n    this.reset();\r\n    // if (name !== '' && number !== '') {\r\n    //   this.props.onSubmit(name, number);\r\n    //   this.reset();\r\n    //   return;\r\n    // }\r\n    // alert('Please fill empty fields');\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <form onSubmit={this.handleSubmit} className={styles.contacts_form}>\r\n          <div>\r\n            <label htmlFor={this.nameInputId} className={styles.label}>\r\n              Name\r\n              <input\r\n                type=\"text\"\r\n                value={name}\r\n                name=\"name\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                required\r\n                onChange={this.handleChange}\r\n                id={this.nameInputId}\r\n                className={styles.input}\r\n              />\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label htmlFor={this.numberInputId} className={styles.label}>\r\n              Number\r\n              <input\r\n                type=\"tel\"\r\n                value={number}\r\n                name=\"number\"\r\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                required\r\n                onChange={this.handleChange}\r\n                id={this.numberInputId}\r\n                className={styles.input}\r\n              />\r\n            </label>\r\n          </div>\r\n\r\n          <button type=\"submit\" className={styles.form_button}>\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number) => dispatch(contactActions.addContact(name, number)),\r\n});\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","// import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport styles from './Filter.module.css';\r\nimport { connect } from 'react-redux';\r\nimport contactActions from '../../redux/phonebook/phonebook-action';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label className={styles.label}>\r\n      Find contact by name\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n        className={styles.input}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n// Filter.propTypes = {\r\n//   value: PropTypes.string.isRequired,\r\n//   onChange: PropTypes.func.isRequired,\r\n// };\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(contactActions.changeFilter(e.target.value)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"../ElementContactList/ElementContactList.module.css\";\r\n\r\nconst ElementContactList = ({ name, number }) => {\r\n    return (<>\r\n        <span className={styles.contact_name}>{name}: </span>\r\n        <span className={styles.contact_number}>{number}</span>\r\n    </>\r\n        );\r\n    };\r\n\r\nElementContactList.propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.string\r\n}\r\n\r\nElementContactList.defaultProps = {\r\n    name: \"Hello World\",\r\n    number: 123456789\r\n}\r\nexport default ElementContactList;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport contactActions from '../../redux/phonebook/phonebook-action';\r\nimport ElementContactList from '../ElementContactList/ElementContactList';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onClick }) => {\r\n  return (\r\n    <ul className={styles.contact_list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={styles.contact_item}>\r\n          <ElementContactList name={name} number={number} />\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              onClick(id);\r\n            }}\r\n            className={styles.item_button}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst getVisibleContacts = (contacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n  contacts: getVisibleContacts(items, filter),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onClick: id => dispatch(contactActions.deleteContact(id)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from 'react';\r\n// import { connect } from 'react-redux';\r\n// import { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport Container from './Component/Container/Container';\r\nimport ContactForm from './Component/ContactForm/ContactForm';\r\nimport Filter from './Component/Filter/Filter';\r\nimport ContactList from './Component/ContactList/ContactList';\r\n\r\nclass App extends React.Component {\r\n  static propTypes = {\r\n    contacts: PropTypes.array,\r\n    filter: PropTypes.string,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <div>\r\n          <h1>Phonebook</h1>\r\n          {/* <ContactForm onSubmit={this.formAddContact} /> */}\r\n          <ContactForm />\r\n\r\n          <h2>Contacts</h2>\r\n          {/* <Filter value={this.state.filter} onChange={this.changeFilter} /> */}\r\n          <Filter />\r\n\r\n          {/* <ContactList\r\n            visibleContacts={this.getVisibleContacts}\r\n            onClick={this.deleteContact}\r\n          /> */}\r\n          <ContactList />\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport contactsAction from './phonebook-action';\r\nimport contacts from '../../json/contacts.json';\r\n\r\nconst items = createReducer(contacts, {\r\n  [contactsAction.addContact]: (state, { payload }) => {\r\n    if (state.map(contact => contact.name).includes(payload.name)) {\r\n      return alert(`${payload.name} is already exist`);\r\n    }\r\n    return [...state, payload];\r\n  },\r\n  [contactsAction.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [contactsAction.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n\r\n// -----------------1й вариант, без Redux Toolkit\r\n// import { combineReducers } from 'redux';\r\n// import types from './phonebook-types';\r\n\r\n// const items = (state = [], { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.ADD:\r\n//       return [...state, payload];\r\n\r\n//     case types.DELETE:\r\n//       return state.filter(contact => contact.id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const filter = (state = '', { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.CHANGE_FILTER:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// export default combineReducers({\r\n//   items,\r\n//   filter,\r\n// });\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport contactsReducer from './phonebook/phonebook-reducer';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\n// const rootReducer = combineReducers({\r\n//   contacts: persistReducer(persistConfig, rootReducer),\r\n// });\r\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n\r\n// ---------------1й вариант, без Redux Toolkit\r\n// import { createStore, combineReducers } from 'redux';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\n// import contactsReduser from './phonebook/phonebook-reducer';\r\n\r\n// const rootReducer = combineReducers({\r\n//   contacts: contactsReduser,\r\n// });\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n\r\n// export default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport './styles.css';\nimport 'modern-normalize/modern-normalize.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts_form\":\"ContactForm_contacts_form__1vYVf\",\"form_button\":\"ContactForm_form_button__3mXF7\",\"label\":\"ContactForm_label__2rslm\",\"input\":\"ContactForm_input__12A8J\"};"],"sourceRoot":""}